"use strict";(self.webpackChunkparcel_app=self.webpackChunkparcel_app||[]).push([[3358],{23358:(j,c,a)=>{a.r(c),a.d(c,{execute:()=>g});var b=a(15861),d=a(26584),h=a(62208);let u;function g(l,s){let e=s.responseType;e?"array-buffer"!==e&&"blob"!==e&&"json"!==e&&"native"!==e&&"native-request-init"!==e&&"text"!==e&&(e="text"):e="json",s.responseType=e;const f=(0,h.Wg)(s.signal);return delete s.signal,globalThis.invokeStaticMessage("request",{url:l,options:s},{signal:f}).then(function(){var v=(0,b.Z)(function*(t){let i,n,p,_,r;if(t.data)if(t.data instanceof ArrayBuffer){if(!("json"!==e&&"text"!==e&&"blob"!==e||(i=new Blob([t.data]),"json"!==e&&"text"!==e||(u||(u=new FileReaderSync),_=u.readAsText(i),"json"!==e)))){try{n=JSON.parse(_||null)}catch(o){const y={...o,url:l,requestOptions:s};throw new d.Z("request:server",o.message,y)}if(n.error){const o={...n.error,url:l,requestOptions:s};throw new d.Z("request:server",n.error.message,o)}}}else"native"===e&&(t.data.signal=f,p=yield fetch(t.data.url,t.data),t.httpStatus=p.status);switch(e){case"blob":r=i;break;case"json":r=n;break;case"native":r=p;break;case"text":r=_;break;default:r=t.data}return{data:r,httpStatus:t.httpStatus,requestOptions:s,ssl:t.ssl,url:l}});return function(t){return v.apply(this,arguments)}}())}}}]);